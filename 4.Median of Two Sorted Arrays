/***********************************************************
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.

***********************************************************/

//code

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int l1 = nums1.length;
        int l2 = nums2.length;
        int length = l1+l2;
        int[] merged_array = new int[length];
        
        int i=0 , j=0 ,k=0;

        while(i<l1 && j<l2){
            if(nums1[i] <= nums2[j]){
                merged_array[k++] = nums1[i++];
            }
            else{
                merged_array[k++]=nums2[j++];
            }
        }
        //adding all the remaining terms
        while(i<l1){
            merged_array[k++]=nums1[i++];
        }
       while(j<l2){
        merged_array[k++]=nums2[j++];
       }
        double ans =0;
        if(length % 2 == 0){
            ans=(merged_array[length/2]+ merged_array[(length/2-1) ])/2.0;
        }
        else{
            ans = merged_array[length/2];
        }
        return ans;
    }
}
